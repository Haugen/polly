<?php
/**
 * @file
 * Code for the Konzilo Connect module .
 */

/**
 * Implements hook_entity_mapper_mappers()
 * @return EntityMapper[]
 */
function konzilo_connect_entity_mapper_mappers() {
  $statusMapper = new PropertyMapper('published', 'status');
  $statusMapper->addFormatter(function ($value) {
      return $value ? 1 : 0;
  });

  $body_mapper = new PropertyMapper('content.text.body', 'field_konzilo_body');
  $body_mapper->addFormatter(function ($value){
      return array('value' => $value, 'format' => 'markdown');
    });

  $about_mapper = new PropertyMapper('about', 'field_konzilo_body');
  $about_mapper->addFormatter(function ($value){
      return array('value' => $value, 'format' => 'markdown');
    });


  $authorMapper = entity_mapper('author', 'konzilo_author', 'node')
    ->setDefaults(array('type' => 'konzilo_author'))
    ->addMapping(new PropertyMapper('name', 'title'))
    ->addMapping($about_mapper)
    ->addMapping(new KonziloFileListPropertyMapper('image', 'field_konzilo_file'));

  $mapper = entity_mapper('article', 'konzilo_article', 'node')
    ->setDefaults(array('type' => 'konzilo_article'))
    ->addMapping(new PropertyMapper('title', 'title'))
    ->addMapping(new PropertyMapper('content.text.headline', 'field_konzilo_headline'))
    ->addMapping(new PropertyMapper('content.text.lead', 'field_konzilo_lead'))
    ->addMapping($body_mapper)
    ->addMapping(new EntityPropertyMapper('content.author', 'field_konzilo_author', $authorMapper))
    ->addMapping(new KonziloFileListPropertyMapper('content.images.images', 'field_konzilo_file'))
    ->addMapping($statusMapper);

  return array(
    'konzilo_connect' => array(
      'label' => 'Konzilo connect',
      'mappers' => array(
        'konzilo_article' => $mapper,
        'konzilo_file' => new FileEntityMapper('file'),
      ),
    ),
  );
}